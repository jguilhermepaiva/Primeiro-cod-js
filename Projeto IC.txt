exports.solve = function(fileName) {
  let formula =readFormula(fileName)
  let result = doSolve(formula.clauses, formula.variables)
  return result 
}
// Recebe o assignment atual e cria um novo.
function nextAssignment(currentAssignment) {
var temparray0 = currentAssignment
var temparray=currentAssignment.join('')
var b2=parseInt(temparray,2)
b2++
b2=b2.toString(2)
b2=b2.split('')
for (var f=0;b2.length>f;f++){
b2[f] = parseInt(b2[f]);
}
for(var jk=0;b2.length>jk;jk++){
  var b2k = b2.length - 1 - jk
  var temp2k = temparray.length - 1 - jk
  temparray0[temp2k]=b2[b2k]
}
var newAssignment = temparray0
  return newAssignment
}
 
 
function doSolve(clauses, assignment) {
  let isSat = false
    let k11=0
     while((!isSat) &&  k11 < Math.pow(2, assignment.length)-1){         
       var VerVerdade = verdade(clauses, assignment)
       if (VerVerdade == true){
        isSat = true
       }else {//SE NAO FOR TRUE TESTA O PROXIMO
           assignment = nextAssignment(assignment)
       }
       k11++
  }
  let result = {'isSat': isSat, satisfyingAssignment: null}
  if (isSat) {
    result.satisfyingAssignment = assignment
  }
  return result

} 
function readFormula(fileName) {
  var fs = require('fs')
  var text = fs.readFileSync(fileName,"utf8").split('\n')
  var clauses = readClauses(text)
  var variables = readVariables(clauses)
  let specOk = checkProblemSpecification(text, clauses, variables)
 
  let result = { 'clauses': [], 'variables': [] }
  if (specOk) {
    result.clauses = clauses
    result.variables = variables
  }
  return result
} function readClauses (text){
  var array=new Array()
  for(var i=0;text.length>i;i++){
      if(text[i].charAt(0) != 'c' && text[i].charAt(0) !='p'){
         if (text[i].split(" ").length != 1){
          var u=text[i].split(" ")
              u.pop()
          array.push(u)
        }
      }
  }
  
  return array
} function readVariables (clauses){
  var quantidade=1
  var array2=new Array()
  for(var j=0;clauses.length>j;j++){
    for(var x=0;clauses[j].length>x;x++){
      if(Math.abs(clauses[j][x])==quantidade){
        quantidade++
        j=0
        x=0
        array2.push(0)
      }
}
    }
    
    return array2
  }
  function checkProblemSpecification(text, clauses,variables){
    for (var y=0;text.length>y;y++){
      if(text[y].charAt(0)=='p'){
      text[y] = text[y].split(" ")
      if(text[y][3]==clauses.length && text[y][2]==variables.length){
        return true
       }else{
       return false
     }
    }
  }
}
function verdade (clauses, variables){
    var k1 = 0


    var verd = 0
    

    while(k1 < clauses.length ){
     for(var ki = 0; ki < (clauses[k1].length - 1); ki++){
       if( verd == 0){
        let k0 = parseInt(clauses[k1][ki], 10)
       let lugar = Math.abs(k0) - 1
     if (k0 < 0){
        if(variables[lugar] == 0){
                  verd = verd +1
              }
            }else{
                if(variables[lugar] == 1){
                    verd = verd +1
                }
            }
        }
    }


        if (verd == 0){
         return false
        }else{
        verd = 0;
        k1++
        }
    }
    return true
}
